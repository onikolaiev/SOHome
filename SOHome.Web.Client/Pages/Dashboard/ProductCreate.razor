@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SOHome.Common.Exceptions
@layout PanelLayout
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager navigationManager
@page "/dashboard/products/create"

@if (showErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@errors</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <h5>Cadastro de usuário</h5>
        <EditForm Model="productModel" OnValidSubmit="HandlePost">
            <DataAnnotationsValidator/>
            <ValidationSummary />

            <div class="form-group">
                <label for="barcode">Código de barras</label>
                <InputText id="barcode" class="form-control" @bind-Value="productModel.Barcode"/>
                <ValidationMessage For="@(() => productModel.Barcode)" />
            </div>
            <div class="form-group">
                <label for="name">Nome do produto</label>
                <InputText id="name" class="form-control" @bind-Value="productModel.Name"/>
                <ValidationMessage For="@(() => productModel.Name)" />
            </div>
            <div class="form-group">
                <label for="price">Preço</label>
                <InputNumber id="price" class="form-control" @bind-Value="productModel.Price"/>
                <ValidationMessage For="@(() => productModel.Price)" />
            </div>
            <button type="submit" class="btn btn-primary">Cadastrar produto</button>
        </EditForm>
    </div>
</div>

@code {
    private ProductModel productModel = new ProductModel();
    private bool showErrors;
    private string errors;

    private async Task HandlePost()
    {
        showErrors = false;

        try
        {
            var result = await Http.PostAsync<ProductModel>("api/products", productModel);
            navigationManager.NavigateTo("/dashboard/products");
        }
        catch(AccessTokenNotAvailableException ex)
        {
            errors = ex.StackTrace;
            showErrors = true;
        }
    }
}
